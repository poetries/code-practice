<?php
/**
 * Created by PhpStorm.
 * User: poerty
 * Date: 2016/5/22
 * Time: 9:49
 */

// 结果昨天学的 赋值运算符,和今天的逻辑运算符


$a = 3;
$b = 5;

if(($a = 8) || ($b = 9)) {
    $a = $a + 1;
    $b = $b + 1;
}

echo $a,'~',$b,'<br />';


/***

分析, 用() 包起来 2个 运算式

($a = 8) 这是一个赋值表达式, 返回值是 8
8 在做if 判断,转成bool,是 true.



再想:
生活中的例子:
你有房 或 有车,都可以嫁
男说:自己有房,
只根据房子,已经可以判断出总的结果--- 可以嫁.


所以,车根本就不用再判断.

这个特性称之为: 逻辑运算的短路特性.
一旦从逻辑上能分析出结果后,后面的表达式将不再运行.


 ***/

echo '<br />';

$a = 3;
$b = 5;

if(($a == 3) && ($b = 99)) {
    echo $a,'~',$b,'<br />';
}

/*
先是 $a == 3 表达式运行,计算结果为 true
但是,后面是 && ,

生活中的例子:
你有房 并且 有车,才可以嫁
男说:自己有房,

女还得继续判断, 是否有车,才能最终定结果.

*/

echo '<br />';
$a = 3;
$b = 5;

if(($a > 3) && ($b = 99)) {
    echo $a,'~',$b,'<br />';
} else {
    echo $a,'~',$b,'<br />';
}



/***


 ***/

$a = 3;
$b = 5;

if($a == 3 && $b > 5 || $a > 3 && $b == 5 ) {
    echo 'aaaa';
} else {
    echo 'bbbb';
}

/**
上面这个表达式,是为了告诉大家,逻辑运算的优先级
&& 的优先级 比 || 高

但是在开发中,不推荐这么写
 **/


if( ($a == 3 && $b > 5) || ($a > 3 && $b == 5) ) {
    echo 'aaaa';
} else {
    echo 'bbbb';
}